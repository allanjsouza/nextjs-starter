name: CD
on:
  push:
    branches: [main]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  create-version-pr-or-release:
    runs-on: ubuntu-22.04
    outputs:
      should-deploy: ${{steps.changesets.outputs.hasChangesets == 'false'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Create version PR or Github release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{secrets.CHANGESETS_TOKEN}}
      - name: Changesets (outputs)
        run: echo '${{toJson(steps.changesets.outputs)}}'
      - name: Notify on Slack when release PR is created
        if: steps.changesets.outputs.pullRequestNumber
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ðŸ”– *<https://github.com/${{github.repository}}/pull/${{steps.changesets.outputs.pullRequestNumber}}|Version Pull Request>* was updated. Review and merge it to create a new release and deployment."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Set release version
        if: steps.changesets.outputs.published == 'true'
        id: set-version
        run: |
          version=${{fromJson(steps.changesets.outputs.publishedPackages)[0].version}}
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Notify on Slack when new release is created
        if: steps.changesets.outputs.published == 'true'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "âŒ› *<https://github.com/${{github.repository}}/releases/tag/v${{steps.set-version.outputs.version}}|Version ${{steps.set-version.outputs.version}}>* Released! Deployment should be in progress."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  run-tests:
    needs: create-version-pr-or-release
    if: needs.create-version-pr-or-release.outputs.should-deploy == 'true'
    uses: ./.github/workflows/test.yaml
    secrets: inherit
  deploy-to-staging:
    needs: run-tests
    permissions:
      pull-requests: write
      id-token: write
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    with:
      aws-eb-env: ${{vars.AWS_EB_STAGING_ENV}}
      github-env: "staging"
  deploy-to-production:
    needs: run-tests
    permissions:
      pull-requests: write
      id-token: write
    uses: ./.github/workflows/deploy.yaml
    secrets: inherit
    with:
      aws-eb-env: ${{vars.AWS_EB_PRODUCTION_ENV}}
      github-env: "production"
